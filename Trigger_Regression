def version = ''
def sourceFolder = ''
def destFolder = ''
def command = ''
def retVal = ''
def batList = ['dshalom': '123', 'UL-tde6': '123']
def parallelStagesBat = [:]

pipeline {
    agent { label 'Asil-sv-java6' }
    parameters{
        string(name: 'Branch')
        string(name: 'Version')
        string(name: 'VersionPath')
        string(name: 'TriggerId')
    }
    stages {
        stage('-- Copy Version --') {
            steps {
                script{
                    version = params.Version.replace(".","_")
                    sourceFolder = params.VersionPath
                    destFolder = '\\\\192.168.60.252\\sftp\\upload'
                    command = 'xcopy ' + sourceFolder + '\\*' + version + '* ' + destFolder + ' /syq'
                    println command
                    retVal = bat (script: command, returnStdout: true)
                    println retVal
                }
            }
        }
        stage('-- Run BAT --'){
            when{
                expression { retVal.contains('copied') }
            }
            steps{
                script {
                    for (set in batList) {
                        parallelStagesBat['BAT on ${set.key}'] = {runBat(set.key, set.value)}
                    }
                    parallel parallelStagesBat
                }
            }
        }
    }
}

def runBat(String slave, String sut){
    return {
        node(slave){
            build job: 'Run_Automation', 
            parameters: [
                string(name: 'SUT', value: sut)
            ]
        }
    }
}
